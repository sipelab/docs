{
	"nodes":[
		{"id":"49744ac87ff9e4bb","type":"group","x":1280,"y":-1240,"width":2280,"height":2048,"color":"5","label":"mesofield.config.ExperimentConfig"},
		{"id":"6a9a3a9fe8091bae","type":"group","x":-2960,"y":-1410,"width":2029,"height":1200,"color":"5","label":"config.hardware"},
		{"id":"da9418f97069ecde","type":"group","x":-640,"y":-1300,"width":1380,"height":980,"label":"mesofield/gui/maingui.py"},
		{"id":"8a2932e9dc58ba1e","type":"group","x":340,"y":-1240,"width":380,"height":880,"color":"5","label":"mesofield/gui/controller.py"},
		{"id":"5d52ae93c3398811","type":"group","x":-2187,"y":-1250,"width":1221,"height":248,"color":"2","label":"config.hardware.camera[0]"},
		{"id":"1c446f65b33ab8e5","type":"group","x":-2187,"y":-918,"width":1221,"height":248,"color":"#aa8d5a","label":"config.hardware.camera[1]"},
		{"id":"090f6ed3a424c254","type":"group","x":-2187,"y":-590,"width":1220,"height":248,"color":"#4f70cd","label":"config.hardware.encoder"},
		{"id":"7568c17fcf6e40b0","type":"group","x":-610,"y":-670,"width":940,"height":310,"color":"#596fca","label":"mesofield/gui/speedplotter.py"},
		{"id":"17cecf5c7950ce31","type":"group","x":-600,"y":-1168,"width":440,"height":424,"color":"#a78e5d","label":"mesofield/gui/mdagui.py"},
		{"id":"8f21d2a4b99fb94d","type":"group","x":-140,"y":-1168,"width":440,"height":424,"color":"2","label":"mesofield/gui/mdagui.py"},
		{"id":"c1d1114103223e64","type":"group","x":-140,"y":318,"width":440,"height":424,"color":"#a78e5d","label":"mesofield/gui/mdagui.py"},
		{"id":"23b6fe355c19828f","type":"text","text":"Toggle Console","x":-600,"y":-1280,"width":195,"height":52},
		{"id":"000971cccd01000a","type":"text","text":"# Hardware.yaml\n\n```yaml\nmemory_buffer_size: 10000\nviewer_type: \"static\"\nblue_led_power_mw: \"8.2\"\nviolet_led_power_mw: \"4.2\"\n  \nencoder:\n  type: \"wheel\"\n  port: \"COM4\"\n  baudrate: 57600\n  cpr: 2400\n  diameter_mm: 80\n  sample_interval_ms: 20\n  development_mode: False\n\ncameras:\n  - id: \"Dhyana\"\n    name: \"mesoscope\"\n    backend: \"micromanager\"\n    micromanager_path: \"C:/Program Files/Micro-Manager-2.0\"\n    configuration_path: \"C:/Program Files/Micro-Manager-2.0/mm-sipefield.cfg\"\n    properties:\n      Dhyana:\n        Output Trigger Port: 2\n        Gain: \"HDR\"\n        fps: 49 # IMPORTANT: This is validated externally \n        viewer_type: \"interactive\"\n      Arduino-Shutter:\n        OnOff: \"1\"\n      Arduino-Switch:\n        Sequence: \"On\"\n      Core:\n        Shutter: \"Arduino-Shutter\"\n\n  - id: \"ThorCam\"\n    name: \"pupil\"\n    backend: \"micromanager\"\n    micromanager_path: \"C:/Program Files/Micro-Manager-thor\"\n    configuration_path: \"C:/Program Files/Micro-Manager-2.0/ThorCam.cfg\"\n    properties:\n      ThorCam:\n        Exposure: 20\n        fps: 30 # IMPORTANT: This is validated externally \n        ROI: [440, 305, 509, 509]\n        viewer_type: \"static\"\n  \n  \n  # - id: \"arducam\"\n  #   name: \"arducam\"\n  #   backend: \"opencv\"\n  #   properties:\n  #     fps: 30\n```","x":-3920,"y":-1783,"width":720,"height":658},
		{"id":"a9542073a4eaeee4","type":"text","text":"```python\ndef launch_mesofield(params):\n    \"\"\"Launch the mesofield acquisition interface.\"\"\"\n    print('Launching mesofield acquisition interface...')\n\n    app = QApplication([])\n    config = ExperimentConfig(params)\n    config.hardware._configure_engines(config)\n    mesofield = MainWindow(config)\n    mesofield.show()\n    app.exec()\n```","x":-3920,"y":-944,"width":720,"height":301},
		{"id":"312f19a0e87960ef","type":"text","text":"### mesofield.config.HardwareManager\n\n```python\ndef _load_hardware_from_yaml(self, path):\n\tparams = {}\n\twith open(path, \"r\", encoding=\"utf-8\") as file:\n\t\tparams = yaml.safe_load(file) or {}\n\treturn params\n```","x":-2900,"y":-915,"width":531,"height":242},
		{"id":"db94115524f32dcf","type":"text","text":"Snap","x":-580,"y":-1131,"width":200,"height":60},
		{"id":"569452d029144633","type":"text","text":"Live","x":-380,"y":-1131,"width":200,"height":60},
		{"id":"d1e27a50fba1374a","type":"text","text":"Save Directory","x":380,"y":-1222,"width":300,"height":60},
		{"id":"9f8fb8c2875ae7b8","type":"text","text":"Snap","x":-120,"y":355,"width":200,"height":60},
		{"id":"dc7a01e029fc116a","type":"text","text":"Live","x":80,"y":355,"width":200,"height":60},
		{"id":"c536c92a329fdd0a","type":"text","text":"##### def *_get_json_file_choices( )*","x":380,"y":-1082,"width":300,"height":60},
		{"id":"6e41ee8666359d14","type":"text","text":"Generates an iPython terminal with access to key components of the software for manual control and troubleshooting\n\n```python\n# Expose variables to the console's namespace\nself.kernel.shell.push({\n\t'self': self,\n\t'config': cfg,\n})\n```","x":-160,"y":-1681,"width":480,"height":280},
		{"id":"e46f3edd372bb39b","type":"text","text":"# [[ImageViewer]]","x":-580,"y":-1049,"width":400,"height":278},
		{"id":"6e80dc33ee73b566","type":"text","text":"Parameters Table","x":380,"y":-1020,"width":300,"height":448},
		{"id":"c175a42e5982fc6a","type":"text","text":"\n\n\n# [[ImageViewer]]","x":-120,"y":-1052,"width":400,"height":278},
		{"id":"083de44f8a016fbf","type":"text","text":"Live","x":80,"y":-1131,"width":200,"height":60},
		{"id":"0f90ed6fa84f8037","type":"text","text":"Snap","x":-120,"y":-1131,"width":200,"height":60},
		{"id":"c8f9af1022759144","type":"text","text":"Start Live Encoder","x":-590,"y":-650,"width":900,"height":50},
		{"id":"5ce16b534aa19d7d","type":"text","text":"","x":-590,"y":-600,"width":900,"height":225},
		{"id":"9f2babd5edafafa7","type":"text","text":"config.update_parameters","x":380,"y":-804,"width":250,"height":60},
		{"id":"5b2dc9b6493f8704","type":"text","text":"[[Record]]","x":380,"y":-572,"width":300,"height":67,"color":"1"},
		{"id":"229a69e53f6aff16","type":"text","text":"Test LED Buttons","x":380,"y":-505,"width":300,"height":60},
		{"id":"965a377559a8565f","type":"text","text":"**MesoEngine**\n*Controls sequencing of Multidimension acquisition*","x":405,"y":440,"width":250,"height":109},
		{"id":"794329ae48254425","type":"text","text":"frameReady signal","x":-19,"y":808,"width":198,"height":60,"color":"4"},
		{"id":"6b70aca9167b5384","type":"text","text":"[[Add Note]]","x":380,"y":-445,"width":300,"height":60},
		{"id":"ba02055939248c8c","type":"text","text":"# [[ImageViewer]]","x":-120,"y":437,"width":400,"height":278},
		{"id":"574f303c3c046a8c","type":"text","text":"Event Handler","x":448,"y":808,"width":165,"height":60},
		{"id":"9e7d1a117cdc7da1","type":"text","text":"frameReady signal","x":732,"y":808,"width":198,"height":60,"color":"4"},
		{"id":"0bb25273e39d0d21","type":"text","text":"Dhyana/Meso MMCore ","x":405,"y":1020,"width":250,"height":60,"color":"3"},
		{"id":"e5d0c494f0e8f587","type":"text","text":"**MDA Runner**\n*pymmcore-plus orchestration of MDA data from MMCore object*","x":415,"y":610,"width":231,"height":150},
		{"id":"fa753b14972f94ac","type":"text","text":"Writer Thread","x":738,"y":647,"width":186,"height":76},
		{"id":"4eac17806b3a50f4","type":"text","text":"### Camera Object = core.*getDeviceObject*(`camera_id`)\n```python\ncams = []\nfor camera_config in self.yaml.get(\"cameras\"):\n\tcamera_id = camera_config.get(\"id\")\n\tbackend = camera_config.get(\"backend\")\n```","x":-2167,"y":-1230,"width":531,"height":208},
		{"id":"2da079c4d8c93a27","type":"text","text":"#### mesofield.engines.**PupilEngine**\n*Controls sequencing of Multidimension acquisition*\n```python\nif camera_id == 'ThorCam':\n\tengine = PupilEngine(core, use_hardware_sequencing=True)\n\tcore.mda.set_engine(engine)\n```","x":-1637,"y":-1230,"width":651,"height":208},
		{"id":"e92b9dcd3e946ef5","type":"text","text":"### Camera Object = core.*getDeviceObject*(`camera_id`)\n```python\ncams = []\nfor camera_config in self.yaml.get(\"cameras\"):\n\tcamera_id = camera_config.get(\"id\")\n\tbackend = camera_config.get(\"backend\")\n```","x":-2167,"y":-898,"width":531,"height":208},
		{"id":"3931ce9d488bdbfa","type":"text","text":"#### mesofield.engines.**MesoEngine**\n*Controls sequencing of Multidimension acquisition*\n```python\nelif camera_id == 'Dhyana':\n\tengine = MesoEngine(core, use_hardware_sequencing=True)\n\tcore.mda.set_engine(engine)\n```","x":-1636,"y":-898,"width":650,"height":208},
		{"id":"aac5bafa0730e557","type":"text","text":"### Encoder \n```python\ndef _initialize_encoder(self):\n\tif self.yaml.get(\"encoder\"):\n\t\tparams = self.yaml.get(\"encoder\")\n\t\tself.encoder = SerialWorker(...)\n```","x":-2167,"y":-570,"width":531,"height":208},
		{"id":"9d80fbb9f9828ffe","type":"text","text":"#### mesofield.io.encoder.**SerialWorker**(**QThread**)\n*Concurrent distribution of encoder data*\n```python\nelif camera_id == 'Dhyana':\n\tengine = MesoEngine(core, use_hardware_sequencing=True)\n\tcore.mda.set_engine(engine)\n```","x":-1637,"y":-570,"width":650,"height":208},
		{"id":"71846d92f039e025","type":"text","text":"##### STREHAB01.json\n```json\n{\n    \"sex\": \"F\",\n    \"genotype\": \"aldh1l1-gcamp8s\",\n    \"DOB\": \"2024-08-13\",\n    \"DOS\": \"2025-01-20\",\n    \"protocol\": \"strehab\",\n    \"subject\": \"STREHAB01\",\n    \"session\": \"01\",\n    \"task\": \"widefield\"\n}\n```\n","x":800,"y":-1136,"width":431,"height":340},
		{"id":"ebe5f2cb25db395a","type":"text","text":"Save data to config.bids_dir","x":1320,"y":647,"width":303,"height":76},
		{"id":"b91bbc16f0a5afa3","type":"text","text":"\nconfig.save_dir","x":1383,"y":-1222,"width":317,"height":60},
		{"id":"61b36f14c20785e0","type":"text","text":"ExperimentConfig.*load_parameters*","x":1383,"y":-1082,"width":317,"height":60},
		{"id":"a2d1200d84a95837","type":"text","text":"### Properties:\n\n##### cores: *Tuple of CMMCorePlus instances from hardware cameras.*\n\n##### encoder: _The SerialWorker instance._\n\n##### save_dir: *(getter/setter) Directory for saving data (appends \"data\" on get).*\n\n##### subject: *Current subject (from parameters, defaulting to 'sub').*\n\n##### session: *Current session (from parameters, defaulting to 'ses').*\n\n##### task: *Current task (from parameters, defaulting to 'task').*\n\n##### start_on_trigger: *Boolean indicating if start is triggered.*\n\n##### sequence_duration: *Total sequence duration (default 60 seconds).*\n\n##### trial_duration: *Duration of a trial.*\n\n##### num_meso_frames: *Computed mesoscope frame count.*\n\n##### num_pupil_frames: *Computed pupil frame count plus offset.*\n\n##### num_trials: *Number of trials computed from duration and trial duration.*\n\n##### parameters: *The internal parameters dictionary.*\n\n##### meso_sequence: *MDASequence for mesoscope frames.*\n\n##### pupil_sequence: *MDASequence for pupil frames.*\n\n##### bids_dir: *Dynamically constructed BIDS directory path.*\n\n##### meso_file_path: *Unique file path for mesoscope file.*\n\n##### pupil_file_path: *Unique file path for pupil file.*\n\n##### notes_file_path: *Unique file path for notes*\n\n##### encoder_file_path: *Unique file path for encoder data.*\n\n##### dataframe: *DataFrame representation of parameters.*\n\n##### json_path: *JSON file path.*\n\n##### psychopy_filename: *(getter/setter) Filename of a Psychopy experiment file.*\n\n##### psychopy_path: *Full path of the Psychopy experiment file.*\n\n##### psychopy_save_path: *Path for saving Psychopy data.*\n\n##### psychopy_parameters: *Dictionary of parameters for Psychopy.*\n\n##### led_pattern: *(getter/setter) LED pattern as a list of strings.*\n\n---\n\n### Methods:\n\n##### init(path: str): *Initializes the config and hardware.*\n\n##### generate_unique_file_path(suffix, extension, bids_type=None): *Generates a unique file path.*\n\n##### load_parameters(json_file_path): *Loads configuration parameters from a JSON file.*\n\n##### update_parameter(key, value): *Updates a parameter in the configuration.*\n\n##### list_parameters(): *Returns a DataFrame of properties (excluding some).*\n\n##### save_wheel_encoder_data(data): *Saves wheel encoder data to CSV.*\n\n##### save_configuration(): *Saves configuration parameters to CSV and writes notes.*","x":1383,"y":-920,"width":741,"height":1480},
		{"id":"b6b02f9b23acadc7","type":"file","file":"Resources/docs/System Design Scheme/%attachments/206n1mhj.bmp","x":1279,"y":-1774,"width":399,"height":209},
		{"id":"2252fb743242b1e8","x":-2671,"y":-19,"width":250,"height":60,"type":"text","text":"Parameters"},
		{"id":"b99c9a86b9cbe8fa","x":-3356,"y":62,"width":250,"height":698,"type":"text","text":"ExperimentConfig"},
		{"id":"0386d9470d3be758","x":-3300,"y":185,"width":250,"height":512,"type":"text","text":"Hardware"},
		{"id":"51cdbf888bdbdb6d","x":-3264,"y":298,"width":250,"height":345,"type":"text","text":"Encoder"},
		{"id":"319a31fd153e7ecb","x":-3237,"y":411,"width":250,"height":60,"type":"text","text":"Lick Detection"},
		{"id":"6fef78e37670aac0","x":-3264,"y":643,"width":250,"height":237,"type":"text","text":"Vis screen"},
		{"id":"4d0cf8cb1484723a","x":-3231,"y":732,"width":250,"height":60,"type":"text","text":"Feedback"}
	],
	"edges":[
		{"id":"8a2ba4808fe1600c","fromNode":"d1e27a50fba1374a","fromSide":"right","toNode":"b91bbc16f0a5afa3","toSide":"left","fromEnd":"arrow","label":"\"C:/experiment\""},
		{"id":"f154d58a3042de85","fromNode":"965a377559a8565f","fromSide":"bottom","toNode":"e5d0c494f0e8f587","toSide":"top","fromEnd":"arrow","color":"1"},
		{"id":"d5c40fe71fc3c86e","fromNode":"e5d0c494f0e8f587","fromSide":"bottom","toNode":"574f303c3c046a8c","toSide":"top","toEnd":"none","color":"1"},
		{"id":"25b74fabaac14206","fromNode":"0bb25273e39d0d21","fromSide":"top","toNode":"574f303c3c046a8c","toSide":"bottom","color":"1","label":"Acquistion Data"},
		{"id":"0399029043216be8","fromNode":"574f303c3c046a8c","fromSide":"left","toNode":"794329ae48254425","toSide":"right","color":"4"},
		{"id":"43610f6b6329551c","fromNode":"794329ae48254425","fromSide":"top","toNode":"ba02055939248c8c","toSide":"bottom","color":"4"},
		{"id":"df23c7a39f06c596","fromNode":"574f303c3c046a8c","fromSide":"right","toNode":"9e7d1a117cdc7da1","toSide":"left","color":"4"},
		{"id":"9129ddc18231b898","fromNode":"9e7d1a117cdc7da1","fromSide":"top","toNode":"fa753b14972f94ac","toSide":"bottom","color":"4"},
		{"id":"89870624f8327770","fromNode":"312f19a0e87960ef","fromSide":"right","toNode":"4eac17806b3a50f4","toSide":"left","color":"#4171d0"},
		{"id":"f2f25c2015a1f12b","fromNode":"312f19a0e87960ef","fromSide":"right","toNode":"e92b9dcd3e946ef5","toSide":"left","color":"#4374d8"},
		{"id":"9e9818d6fed04bff","fromNode":"312f19a0e87960ef","fromSide":"right","toNode":"aac5bafa0730e557","toSide":"left","color":"#4171d0"},
		{"id":"89c570de983b5dcf","fromNode":"000971cccd01000a","fromSide":"bottom","toNode":"a9542073a4eaeee4","toSide":"top","label":"`params`"},
		{"id":"be0b3e5cd4e100ee","fromNode":"8a2932e9dc58ba1e","fromSide":"bottom","toNode":"965a377559a8565f","toSide":"top","label":"mmc.run_mda(Sequence)"},
		{"id":"b5f5b8b2dbe137f7","fromNode":"d1e27a50fba1374a","fromSide":"bottom","toNode":"c536c92a329fdd0a","toSide":"top"},
		{"id":"3619a0f08aec8ba9","fromNode":"c536c92a329fdd0a","fromSide":"right","toNode":"61b36f14c20785e0","toSide":"left","color":"#9f3b3b"},
		{"id":"ce867d2451ae6472","fromNode":"e5d0c494f0e8f587","fromSide":"right","toNode":"fa753b14972f94ac","toSide":"left"},
		{"id":"6a194d89b1d58484","fromNode":"fa753b14972f94ac","fromSide":"right","toNode":"49744ac87ff9e4bb","toSide":"left"},
		{"id":"dd826f33d686e687","fromNode":"b91bbc16f0a5afa3","fromSide":"bottom","toNode":"61b36f14c20785e0","toSide":"top"},
		{"id":"4dca56d21ea7d9c4","fromNode":"71846d92f039e025","fromSide":"left","toNode":"6e80dc33ee73b566","toSide":"right"},
		{"id":"e634ddca0337657a","fromNode":"23b6fe355c19828f","fromSide":"right","toNode":"6e41ee8666359d14","toSide":"bottom"},
		{"id":"43d3a63fc601b5e1","fromNode":"6a9a3a9fe8091bae","fromSide":"right","toNode":"da9418f97069ecde","toSide":"left"},
		{"id":"578202a4c2c889cc","fromNode":"a9542073a4eaeee4","fromSide":"right","toNode":"312f19a0e87960ef","toSide":"left"},
		{"id":"8f986413ee9a538b","fromNode":"2252fb743242b1e8","fromSide":"bottom","toNode":"319a31fd153e7ecb","toSide":"right"},
		{"id":"01f9506845c53f51","fromNode":"b99c9a86b9cbe8fa","fromSide":"left","toNode":"4d0cf8cb1484723a","toSide":"right"}
	]
}